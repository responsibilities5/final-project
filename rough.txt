sudo apt install awscli -y
              aws configure set aws_access_key_id ${var.aws_access_key}
              aws configure set aws_secret_access_key ${var.aws_secret_key}
              aws configure set default.region us-east-1
              sudo aws ecr get-login-password --region us-east-1 | sudo docker login --username AWS --password-stdin 308682804621.dkr.ecr.us-east-1.amazonaws.com
 aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 308682804621.dkr.ecr.us-east-1.amazonaws.com

              aws configure set aws_access_key_id ${var.aws_access_key} && aws configure set aws_secret_access_key ${var.aws_secret_key} && aws configure set default.region us-east-1 && aws configure set default.output json




              stage("RELEASE") {

            steps {
		    //sh("sleep 300")
		    //sh("echo waiting...")

                //sh 'terraform destroy -var \"aws_access_key=$AWS_ACCESS_KEY\" -var \"aws_secret_key=$AWS_SECRET_KEY\" --auto-approve'
                // echo "${IP}"

              /* sshagent(['SSH_AUTH']) {
		       
                       sh("ssh -o StrictHostKeyChecking=no ubuntu@${IP} ls -a")
                       sh("ssh -o StrictHostKeyChecking=no ubuntu@${IP} docker stop \$(docker ps -aq) || true")
                       sh("ssh -o StrictHostKeyChecking=no ubuntu@${IP} docker system prune -af")
		       sh("ssh -o StrictHostKeyChecking=no ubuntu@${IP} sudo aws ecr get-login-password --region us-east-1 | sudo docker login --username AWS --password-stdin ${ECR}") 
                       sh("ssh -o StrictHostKeyChecking=no ubuntu@${IP} sudo docker run -d -p 8080:8080 --name container ${ECR}/project:app-V${BUILD_NUMBER}")
	       } */
                
	    } 
            
	} */